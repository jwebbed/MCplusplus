module <name> (A, B, C, D, E){
	output A, B;
	input C, D, E;

}

<module> ::= "module" + <indentifier> + "(" + <variable-declaration> + ")" + "{" + <module-body> + "}"
<module-body> ::= <statement>* + <input-declaration> + <statement>* + <output-declaration> + <statement>* 
					| <statement>* + <output-declaration> + <statement>* + <input-declaration> + <statement>* // Transient

<statement> ::= <assignment>

<input-declaration> ::= "input" + <variable-declaration> + ";"
<output-declaration> ::= "input" + <variable-declaration> + ";"
<variable-declaration> ::= <variable> + <variable-tuple>* // Transient
<variable-tuple> ::= "," + <variable>  // Transient

<assignment> ::= <variable> + "=" + <logical-expression> + ";"
<logical-expression> ::= <two-input-expression> | <not-expression>
<two-input-expression> ::= <logical-expression> | <bracketed-logical-expression> | <variable> + <opperator> + <logical-expression> | <bracketed-logical-expression> | <variable> //Transient
<not-expression> ::= "!" + <variable> | <logical-expression> //Transient
<bracketed-logical-expression> ::= "(" + <logical-expression> +")" 
<opperator> ::= "^" | "|" | "&" | "!|" | "!&" | "!^"
